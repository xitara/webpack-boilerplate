/**
 * breakpoint mixin
 *
 * @include new-breakpoint(name, start end|false[, media]);
 * start and end can be names from other breakpoints
 * media can be screen, print, speech (and also other media-types and media-fetaures)
 * all is default
 *
 * @include bp(name); is an alias of @import breakpoint(name);
 *
 * creates 3 types of breakpoint:
 * name -> min-width and max-width
 * name-and-up -> only min-width
 * name-and-down -> only max-width
 */

@use 'sass:map';
@use 'sass:meta';
// @use 'bootstrap' as b;
@use '../abstracts/variables' as v;

// init list
$bps: ();

// add new breakpoints
@mixin new-breakpoint($name, $values, $media: false) {
    $v1: nth($values, 1);
    $v2: nth($values, 2);

    // if value is a breakpoint, find its min or max value
    @if type-of($v1) == 'string' {
        // @debug 'v1 string';
        $v1: get-breakpoint(max, $v1);
    }

    // @if type-of($v2) == 'string' {
    //     // @debug 'v2 string';
    //     $v2: get-breakpoint(max, $v2);
    // }

    // @debug 'Values ' $values;
    // @debug 'Start ' $v1;
    // @debug 'Stop ' $v2;

    // create the 3 variations of breakpoints
    $bps: append($bps, ('#{$name}', $v1 $v2 $media)) !global;
    $bps: append($bps, ('#{$name}-and-up', $v2 false $media)) !global;
    $bps: append($bps, ('#{$name}-and-down', false $v2 $media)) !global;
}

// find breakpoint
@function get-breakpoint($point, $name) {
    // @debug $point;

    @each $bp in $bps {
        // @debug $bp;
        // @debug $name;
        $bp-name: nth($bp, 1);

        @if $name == $bp-name {
            $v: nth($bp, 2);
            // @debug $v;

            @if $point == 'min' {
                @return nth($v, 1);
            } @else if $point == 'max' {
                @return nth($v, 2);
            } @else if $point == 'media' {
                @return nth($v, 3);
            }
        }
    }

    @warn 'Not a defined breakpoint: "#{$name}"';
    @return false;
}

// create breakpoint media query
@mixin bp-mediaquery($min, $max, $media: false) {
    @if $media {
        $media: only #{$media};
    } @else {
        $media: all;
    }

    @if $min {
        @if strip-unit($min) == 0 {
            $min: false;
        } @else if unit($min) == 'px' {
            $min: $min + 1px;
        } @else if unit($min) == 'em' {
            $min: $min + 0.0625em;
        }
    }

    @if $min and $max {
        @media #{$media} and (min-width: $min) and (max-width: $max) {
            @content;
        }
    } @else if $min and $max == false {
        @media #{$media} and (min-width: $min) {
            @content;
        }
    } @else if $max and $min == false {
        @media #{$media} and (max-width: $max) {
            @content;
        }
    } @else {
        @content;
    }
}

// generate breakpoint
@mixin breakpoint($name) {
    @include bp-mediaquery(
        get-breakpoint(min, $name),
        get-breakpoint(max, $name),
        get-breakpoint(media, $name)
    ) {
        @content;
    }
}

// define breakpoints
// @include new-breakpoint(phone, 0 768px);
// @include new-breakpoint(tablet, phone 992px);
// @include new-breakpoint(desktop, tablet 1200px);
// @include new-breakpoint(large-desktop, desktop false);

// @include new-breakpoint(xs, 0 480px);
// @include new-breakpoint(s, xs 667px);
// @include new-breakpoint(m, s 800px);
// @include new-breakpoint(l, m 1024px);
// @include new-breakpoint(xl, l 1280px);
// @include new-breakpoint(xxl, xl 1680px);
// @include new-breakpoint(fullhd, xxl 1920px);
// @include new-breakpoint(uhd, fullhd 3840px);
// @include new-breakpoint(uhd2, uhd false);

@include new-breakpoint(phone, 0 20rem, screen); // 320px
@include new-breakpoint(tablet, phone 48rem); // 768px
@include new-breakpoint(desktop, tablet 75rem); // 1200px
// @include new-breakpoint(large-desktop, desktop false); // 1200px

// @include new-breakpoint(phone-l, 0 320px);
// @include new-breakpoint(tablet-l, phone-l 1024px);

// @include new-breakpoint(nav-s, l 1600px);
// @include new-breakpoint(nav-m, nav-s 1700px);
// @include new-breakpoint(nav-l, nav-m 1850px);

// set bootstrap breakpoints
@each $name, $width in v.$grid-breakpoints {
    @if variable-exists(oldName) {
        // @warn 'Exists: ' $oldName ' > ' $name ' > ' $width;
        @include new-breakpoint($name, $oldName $width);
    } @else {
        // @warn 'NotExists: ' $name ' > ' $width;
        @include new-breakpoint($name, 0 $width);
    }
    // @warn $name;
    // $oldName: $name;
}

// .example {
//     @include breakpoint(desktop) {
//         font-size: 2rem;
//     }

//     @include breakpoint(phone-and-up) {
//         font-size: 2rem;
//     }

//     @include breakpoint(tablet-and-down) {
//         font-size: 2rem;
//     }
// }
